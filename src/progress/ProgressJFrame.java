/*
 * Copyright (C) 2007  Daniel da Silva Oliveira
 *
 * This file is part of SCarimbo
 *
 * SCarimbo is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 * Contact: Daniel da Silva Oliveira danieloliveira@anatel.gov.br
 */

/*
 * ProgressJFrame.java
 *
 * Created on 3 de Julho de 2007, 14:01
 */
package progress;

import java.awt.Cursor;
import javax.swing.ImageIcon;
import main.*;

/**
 *
 * @author  danieloliveira
 */
public class ProgressJFrame extends javax.swing.JFrame {

    /** Creates new form ProgressJFrame */
    public ProgressJFrame() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Código Gerado ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle(Main.APP_NAME);
        setIconImage(new ImageIcon(this.getClass().getResource("/images/Mini - SCarimbo.png")).getImage());
        jProgressBar1.setStringPainted(true);

        jLabel1.setText("Aguarde");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setLengthOfTask(int length) {
        jProgressBar1.setMaximum(length);
    }

    public synchronized void reset() {
        jProgressBar1.setValue(0);
        jLabel1.setText("Aguarde");
    }

    public synchronized void setMessage(String message) {
        jLabel1.setText(message);
        int nextValue = jProgressBar1.getValue() + 1;
        jProgressBar1.setValue(Math.min(nextValue, jProgressBar1.getMaximum()));
    }

    @Override
    public synchronized void setVisible(boolean b) {
        if (b) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        } else {
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
        super.setVisible(b);
    }

    public synchronized void exit(int status) {
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        System.exit(status);
    }
    // Declaração de variáveis - não modifique//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JProgressBar jProgressBar1;
    // Fim da declaração de variáveis//GEN-END:variables
}
